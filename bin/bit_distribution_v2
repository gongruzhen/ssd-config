#!/bin/bash

# this script can print the vth for Hynix V2

lun=$1
sblk=$2
wl=$3
step=$4

apptool=./ztool
g_cfg="--dev=a"
cfg="-m -pN -B"

usage()
{
	echo "Usage:"
	echo -e "\t./bit_distribution lun sblk page vth-step"
}

handle_low_range()
{
	low_vth=-0.6
	page_bit_cnt_pre=0
	#for ((vth = 0x45; vth <= 0xFE; vth += $step)); do
	for ((vth = 0x45; vth <= 0xFE; vth += $step)); do
		vth16=$(echo "obase=16; $vth" | bc)
		$apptool $g_cfg vth-read 0 $vth16 $lun
		page_bit_cnt_cur=$($apptool $g_cfg --silent --disable-ecc read $lun $sblk $wl $cfg)

		if (($vth == 0x45)); then
			echo -e "$low_vth\t$page_bit_cnt_cur"
		else
			Delta=$((page_bit_cnt_cur - page_bit_cnt_pre))
			low_vth=$(printf "%.2f" `echo "scale=2; $low_vth+0.02*$step" | bc`)
			echo -e "$low_vth\t$Delta"
		fi

		page_bit_cnt_pre=$page_bit_cnt_cur
	done

	g_page_bit_cnt_pre=$page_bit_cnt_pre;
}

handle_high_range()
{
	high_vth=3.11
	for ((vth = 0x75; vth <= 0xFF; vth += $step)); do
		vth16=$(echo "obase=16; $vth" | bc)
		$apptool $g_cfg vth-read 1 $vth16 $lun
		page_bit_cnt_cur=$($apptool $g_cfg --silent --disable-ecc read $lun $sblk $wl $cfg)

		if (($vth == 0x75)); then
			Delta=$((page_bit_cnt_cur - g_page_bit_cnt_pre))
		else
			Delta=$((page_bit_cnt_cur - page_bit_cnt_pre))
		fi

		echo -e "$high_vth\t$Delta"
		high_vth=$(printf "%.2f" `echo "scale=2; $high_vth+0.02*$step" | bc`)

		page_bit_cnt_pre=$page_bit_cnt_cur
	done
}

set_def_val()
{
	$apptool $g_cfg vth-read def $lun
}

# main entry
if [ $# -ne 4 ]; then
	usage;
	exit $#
fi

handle_low_range;
handle_high_range;
set_def_val;
